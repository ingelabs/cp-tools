2004-02-18  C. Brian Jones  <cbj@gnu.org>

	* configure.ac: typo fixed, patch by Archit Shah 
	<archit.shah@alum.mit.edu>

2004-02-16  C. Brian Jones  <cbj@gnu.org>

	* acinclude.m4: removed
	* m4: new directory
	* m4/ac_check_class.m4: new file from gjdoc
	* m4/ac_check_classpath.m4: ditto
	* m4/ac_check_home.m4: ditto
	* m4/ac_check_junit.m4: ditto
	* m4/ac_check_rqrd_class.m4: ditto
	* m4/ac_java_options.m4: ditto
	* m4/ac_prog_antlr.m4: ditto
	* m4/ac_prog_jar.m4: ditto
	* m4/ac_prog_java_cc.m4: ditto
	* m4/ac_prog_javac.m4: ditto
	* m4/ac_prog_javac_works.m4: ditto
	* m4/ac_prog_javadoc.m4: ditto
	* m4/ac_prog_javah.m4: ditto
	* m4/ac_prog_java.m4: ditto
	* m4/ac_prog_java_works.m4: ditto
	* m4/ac_try_run_javac.m4: ditto
	* m4/am_prog_gcj.m4: ditto
	* m4/ac_classpath_add.m4: new file
	* autogen.sh: copied from classpath for version checking

2005-02-08  C. Brian Jones  <cbj@gnu.org>

	* configure.ac: change --enable-gcj to --enable-native in keeping
	with gjdoc; the default in cp-tools is still to compile natively 
	if possible
	* Makefile.am: add nodist_ to _SOURCES including src/jar/bytecode.jar 
	for make distcheck; also added this file to DISTCLEANFILES
	* src/gnu/classpath/tools/rmi/registry/RegistryImpl.java: removed
	unused import statement

2005-02-07  Julian Scheid  <julian@sektor37.de>

	* acinclude.m4: apply Thomas Zander's workaround for buggy
	AC_PROG_JAVA macro as a temporary solution.

2005-02-07  Julian Scheid  <julian@sektor37.de>

	* acinclude.m4: added patched macro from gcj.m4.
	* configure.ac: adjust for patched macro.

2005-02-07  Julian Scheid  <julian@sektor37.de>
	
	* acinclude.m4: add current directory to classpath when trying
	whether a java compiler works.
	* configure.ac: add test for java compiler; 
	* Makefile.am: use $(JAVAC) for compiling to bytecode instead of
	$(GCJ); only generate binaries if ENABLE_NATIVE; if not
	ENABLE_NATIVE, generate and install a start script.


2005-01-31  Andrew John Hughes  <gnu_andrew@member.fsf.org>

	* src/gnu/localegen/JavaGenerator.java:
	(JavaGenerator.JavaContent.isUsable()): New
	method to check for usability of parsed content.
	Implementations returning true are added to
	all but the implementation below.
	(JavaGenerator.TimeZoneContent.isUsable()):
	Returns the value of the usability variable,
	which may be set true during generation.
	(JavaGenerator.TimeZoneContent.generateContent(java.io.PrintWriter)):
	Content is now written to a pair of buffers, one
	for each individual set of data, and one for the whole
	block.  These are only printed if usable data is found.
	The ID is also now used first.
	(JavaGenerator.HashtableContent.generateContent(java.io.PrintWriter)):
	\u00A6 is now used as the separator character to avoid
	conflicts.

2005-01-29  C. Brian Jones  <cbj@gnu.org>

	* AUTHORS: added those in ChangeLog or source files
	* NEWS: added content for 0.01 release
	* Makefile.am: 
	modified build to use external bytecode.jar
	renamed cp-tools-$(VERSION).jar to cptools-$(VERSION).jar
	support configure choice of building native binaries or using scripts
	support creating native shared library from bytecode.jar
	* acinclude.m4: added custom macro AC_CLASSPATH_ADD
	* configure.ac: 
	removed automake init option tar-ustar as unnecessary
	modified means of finding jar files, searches /usr/share/java and
	/usr/local/share/java
	added --with-gnu-bytecode option to configure
	added --with-asm option to configure (unused at the moment)
	conditional setting CLASSPATH, checking for specific classes
	* build.xml: removed
	* bin/javah: updated package qualified class name
	* bin/javap: ditto
	* bin/serialver: ditto
	* bin/native2ascii: new file
	* bin/rmic: new file
	* bin/rmiregistry: new file
	* src/gnu/bytecode: removed, use gnu.bytecode from kawa 1.7.91 or later
	* src/gnu/classpath/tools/native2ascii/Native2ASCII.java: Kaffe import
	* src/gnu/classpath/tools/rmi/registry/RegistryImpl.java: Classpath 
	import 
	* src/gnu/classpath/tools/rmi/registry/RegistryImpl_Skel.java: ditto
	* src/gnu/classpath/tools/rmi/registry/RegistryImpl_Stub.java: ditto
	* src/gnu/classpath/tools/rmi/rmic/Compile_gcj.java: ditto
	* src/gnu/classpath/tools/rmi/rmic/Compile_jikes.java: ditto
	* src/gnu/classpath/tools/rmi/rmic/Compile_kjc.java: ditto
	* src/gnu/classpath/tools/rmi/rmic/Compiler.java: ditto
	* src/gnu/classpath/tools/rmi/rmic/RMICException.java: ditto
	* src/gnu/classpath/tools/rmi/rmic/RMIC.java: ditto
	* src/gnu/classpath/tools/rmi/rmic/TabbedWriter.java: ditto
	* src/gnu/classpath/tools/JavahMain.java: moved to javah subdirectory
	* src/gnu/classpath/tools/JavapMain.java: moved to javap subdirectory
	* src/gnu/classpath/tools/Javaph.java: removed
	* src/gnu/classpath/tools/SerialVer.java: moved to serialver 
	subdirectory
	* src/gnu/classpath/tools/Util.java: added bootclasspath, classpath,
	and userclasspath private variables
	(Util): new constructor initializes private variables from system 
	properties
	(findClass): new method to get InputStream from a given class name
	(findClass): this method is a rename of the previous getInputStream 
	and is also now private and no longer static
	(findFile): get InputStream to a given file name
	* src/gnu/classpath/tools/javah/GnuByteCodeJavah.java: new file
	* src/gnu/classpath/tools/javah/Javah.java: new file
	* src/gnu/classpath/tools/javah/JavahMain.java: 
	(main): change method of starting javap
	(parseArguments): change method of starting javap, handle lack of
	class name as argument better
	* src/gnu/classpath/tools/javap/GnuByteCodeJavap.java: new file
	* src/gnu/classpath/tools/javap/Javap.java: new file
	* src/gnu/classpath/tools/javap/JavapMain.java: 
	(main): change method of starting javap
	(parseArguments): change method of starting javap, handle lack of
	class name as argument better

2005-01-29  C. Brian Jones  <cbj@gnu.org>

	* src/gnu/currencygen/Main.java: added copyright statement
	* src/gnu/ldml/AliasElement.java: ditto
	* src/gnu/ldml/Constants.java: ditto
	* src/gnu/ldml/DataElement.java: ditto
	* src/gnu/ldml/DetailedListElement.java: ditto
	* src/gnu/ldml/Element.java: ditto
	* src/gnu/ldml/ExpansionElement.java: ditto
	* src/gnu/ldml/ListDataElement.java: ditto
	* src/gnu/ldml/OrderedListBaseElement.java: ditto
	* src/gnu/ldml/OrderedListElement.java: ditto
	* src/gnu/ldml/ParseException.java: ditto
	* src/gnu/ldml/Parser.java: ditto
	* src/gnu/ldml/ResetElement.java: ditto
	* src/gnu/localegen/CollationInterpreter.java: ditto
	* src/gnu/localegen/JavaGenerator.java: ditto
	* src/gnu/localegen/Main.java: ditto

2005-01-29  C. Brian Jones  <cbj@gnu.org>

	* src/gnu/localegen/Main.java: sorted and formatted
	* src/gnu/localegen/JavaGenerator.java: ditto
	* src/gnu/localegen/CollationInterpreter.java: ditto
	* src/gnu/ldml/ResetElement.java: ditto
	* src/gnu/ldml/Parser.java: ditto
	* src/gnu/ldml/ParseException.java: ditto
	* src/gnu/ldml/OrderedListElement.java: ditto
	* src/gnu/ldml/OrderedListBaseElement.java: ditto
	* src/gnu/ldml/ListDataElement.java: ditto
	* src/gnu/ldml/ExpansionElement.java: ditto
	* src/gnu/ldml/Element.java: ditto
	* src/gnu/ldml/DetailedListElement.java: ditto
	* src/gnu/ldml/DataElement.java: ditto
	* src/gnu/ldml/Constants.java: ditto
	* src/gnu/ldml/Analyzer.java: ditto
	* src/gnu/ldml/AliasElement.java: ditto
	* src/gnu/currencygen/Main.java: ditto
	* src/gnu/classpath/tools/Util.java: ditto
	* src/gnu/classpath/tools/SerialVer.java: ditto
	* src/gnu/classpath/tools/JavapMain.java: ditto
	* src/gnu/classpath/tools/Javaph.java: ditto
	* src/gnu/classpath/tools/JavahMain.java: ditto

2005-01-29  C. Brian Jones  <cbj@gnu.org>

	* src/gnu/localegen/Main.java: removed unused import
	* src/gnu/localegen/JavaGenerator.java: removed unused import
	* src/gnu/ldml/OrderedListElement.java: removed unused import
	* src/gnu/ldml/DetailedListElement.java: removed unused import
	* src/gnu/ldml/Analyzer.java: removed unused import
	* src/gnu/currencygen/Main.java: removed unused import	

2005-01-17  C. Brian Jones  <cbj@gnu.org>

	* configure.ac: new file; thanks to gjdoc for many of the needed bits
	* acinclude.m4: new file
	* Makefile.am: new file
	* .cvsignore: new file
	* COPYING: new file
	* NEWS: new file
	* README: new file
	* AUTHORS: new file
	* autogen.sh: new file
	* bin: new directory
	* bin/javap: new file
	* bin/javah: new file
	* bin/serialver: new file
	* bin/localegen: new file
	* bin/currencygen: new file

2005-01-07  Mark Wielaard  <mark@klomp.org>

	* src/gnu/localegen/JavaGenerator.java:
	Don't generate inner classes deriving java.util.Hashtable, instead
	just use a java.util.Hashtable. Put all strings targeted for one
	Hashtable into one string. This saves much memory during compilation
	with gcj.

2004-12-30  Guilhem Lavaux  <guilhem@kaffe.org>

	* src/gnu/localegen/JavaGenerator.java
	(computeCurrencies): Build two hashtables to store translated
	currencies in LocaleInformation.
	(computeContents): Call computeCurrencies.

	* src/gnu/ldml/Parser.java
	(Parser): Added new parse element to interpret currencies.

2004-12-30  Michael Koch  <konqueror@gmx.de>

	* src/gnu/localegen/JavaGenerator.java
	(classpathZoneOrder): Fixed order of entries.
	(TimeZoneContent.generateContent): Fixed array generation.

2004-12-30  Michael Koch  <konqueror@gmx.de>

	* src/gnu/localegen/JavaGenerator.java (computeLocalNames):
	Generate data for localized variant names.

2004-12-30  Michael Koch  <konqueror@gmx.de>

	* src/gnu/localegen/JavaGenerator.java
	(computeLocalNames): Generate Hashtable for language names.

2004-12-22  Chris Burdess  <dog@gnu.org>

	* src/gnu/ldml/Analyzer.java: Do not specify validSubLocales explicitly.
	* src/gnu/localegen/JavaGenerator.java: Generate
	LocaleInformation.java from root locale.

2004-12-22  Chris Burdess  <dog@gnu.org>

	* src/gnu/ldml/Analyzer.java,src/gnu/ldml/Parser.java: Permit
	multiple locales per parser.
	* src/gnu/localegen/JavaGenerator.java,src/gnu/localegen/Main.java:
	Assign collations and locales to individual JavaGenerators. Fix
	strings generated over multiple lines.

2004-12-18  Guilhem Lavaux  <guilhem@kaffe.org>

	* src/gnu/localegen/JavaGenerator.java:
	(convertToJavaString): Espace '"' using '\"' instead of '\uXXXX'
	because jikes has some problem with it.

2004-12-18  Guilhem Lavaux  <guilhem@kaffe.org>
	
	* src/gnu/localegen/JavaGenerator.java
	(StringContent): Do not convert to escaped strings as it is done
	afterward.

2004-12-18  Guilhem Lavaux  <guilhem@kaffe.org>

	* src/gnu/localegen/JavaGenerator.java
	(generateContents): Keep the comma at the end of the
	array. Convert the data string into an escaped string.
	(ManualListContent.generateContent): Likewise.
	(TimeZoneContent.generateContent): Likewise.
	(generate): Delete the output file if it should be empty.

	* src/gnu/localegen/Main.java
	(main): Accept any number of files on the command line.
	
	* src/gnu/currencygen/Main.java
	(startElement, endElement): Retrieve the info and fractions
	element. Generate a key pair <country>.currency and
	<country>.fractionDigits.
	
2004-12-01  Michael Koch  <konqueror@gmx.de>

	* src/gnu/localegen/JavaGenerator.java
	(generateContent): Always print commas after array entries.

2004-12-01  Michael Koch  <konqueror@gmx.de>

	* src/gnu/localegen/JavaGenerator.java
	(generateContent): Content has to be of type String/String[].

2004-11-14  Guilhem Lavaux  <guilhem@kaffe.org>

	* src/gnu/localegen/JavaGenerator.java
	(OrderedListContent.generateContent): Print null if there is not any
	object corresponding to the ordering element.

2004-11-14  Michael Koch  <konqueror@gmx.de>

	* src/gnu/localegen/JavaGenerator.java: Add a way to add nulls at the
	end of ordered lists. This was needed f list with month names.

2004-11-14  Michael Koch  <konqueror@gmx.de>

	* src/gnu/localegen/JavaGenerator.java:
	Generate output file only if it will contain some locale data.

2004-11-13  Michael Koch  <konqueror@gmx.de>

	* src/gnu/localegen/JavaGenerator.java
	(computeCalendar): Removed obsolete comment.

2004-11-13  Guilhem Lavaux  <guilhem@kaffe.org>

	* src/gnu/localegen/JavaGenerator.java
	(TimeZoneContent.generateContent): Order zone names according to Java
	standard.

2004-11-13  Guilhem Lavaux  <guilhem@kaffe.org>

	* src/gnu/ldml/Parser.java
	(Parser): Added support for 'era', 'eraAbbr' and 'eras' elements.

	* src/gnu/localegen/JavaGenerator.java
	(computeCalendars): Generate the data for eras.

2004-11-12  Michael Koch  <konqueror@gmx.de>

	* src/gnu/localegen/JavaGenerator.java
	(generateJavaHeader): Put proper classpath license header into output.
	(generateContents): Remove unneeded whitestace in output.

2004-11-12  Michael Koch  <konqueror@gmx.de>

	* src/gnu/localegen/Main.java
	(printUsage): Exit app cleanly.

2004-11-12  Guilhem Lavaux  <guilhem@kaffe.org>

	* src/gnu/ldml/ListDataElement.java
	(flattenLeaf): Return null if the element is not found.

	* src/gnu/localegen/JavaGenerator.java
	(computeCalendar): Fix the access path for the calendar objects.

2004-08-13  Guilhem Lavaux  <guilhem@kaffe.org>

	* src/gnu/javalocale, src/gnu/ldml: New LDML parser and GNU Classpath
	locale generator.

2004-08-11  C. Brian Jones <cbj@gnu.org>

	* src/gnu/bytecode: updated classes from Kawa 20040811

2004-08-02  C. Brian Jones <cbj@gnu.org>

	* src/gnu/classpath/tools/JavahMain.java: formatted
	* src/gnu/classpath/tools/JavapMain.java: ditto
	* src/gnu/classpath/tools/SerialVer.java: ditto
	* src/gnu/classpath/tools/Util.java: ditto
	* src/gnu/classpath/tools/Javap.java: renamed to Javaph.java
	and formatted with imports cleaned up
	* src/gnu/classpath/tools/README: fixed a few typos
	
2002-12-19  C. Brian Jones <cbj@gnu.org>

	* src/gnu/bytecode/README: point to Kawa for canonical version of 
	the gnu.bytecode package.

2002-12-18  C. Brian Jones <cbj@gnu.org>

	* src/gnu/bytecode/InnerClassesAttr.java (getClassNames): new 
	method allows other programs to get inner class names and their 
	proper access string.
	* src/gnu/bytecode/Variable.java (getOffset): new method allows 
	program to determine slot in LocalVariableTable.
	* src/gnu/bytecode/Variable.java (getStartPC): new method allows 
	program to determine the pc value for a variable.
	* src/gnu/bytecode/Variable.java (getEndPC): new method allows 
	program to determine the length of a variable
	* build.xml: new file

2002-12-17  C. Brian Jones <cbj@gnu.org>

	* gnu/classpath/tools/*: moved to src/gnu/classpath/tools/
	* src/gnu/classpath/tools/: new directory
	* src/gnu/bytecode: import of gnu.bytecode from Kawa 1.6.99
